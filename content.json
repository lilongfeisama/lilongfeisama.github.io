{"meta":{"title":"LLF�Ĳ���","subtitle":"����㷨������Ůװ","description":"GUET18����ACM����ѡ��","author":"LLF","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"LLF的博客开通了！！！！嘻嘻","slug":"2019-11-28-LLF的博客开通了！！！！嘻嘻","date":"2019-11-28T02:31:50.000Z","updated":"2019-11-28T02:35:49.573Z","comments":true,"path":"2019/11/28/2019-11-28-LLF的博客开通了！！！！嘻嘻/","link":"","permalink":"http://yoursite.com/2019/11/28/2019-11-28-LLF%E7%9A%84%E5%8D%9A%E5%AE%A2%E5%BC%80%E9%80%9A%E4%BA%86%EF%BC%81%EF%BC%81%EF%BC%81%EF%BC%81%E5%98%BB%E5%98%BB/","excerpt":"","text":"感谢B站upCodesheep的视频","categories":[],"tags":[]},{"title":"2019 ICPC上海站 B题 trie树","slug":"2019-ICPC上海站-B题-trie树","date":"2019-11-28T01:48:34.000Z","updated":"2019-11-28T02:28:04.277Z","comments":true,"path":"2019/11/28/2019-ICPC上海站-B题-trie树/","link":"","permalink":"http://yoursite.com/2019/11/28/2019-ICPC%E4%B8%8A%E6%B5%B7%E7%AB%99-B%E9%A2%98-trie%E6%A0%91/","excerpt":"","text":"Problem B. Preﬁx Code输入： T组数据 T&lt;=100;每组数据给一个N 代表输入的密码数量下面N行 每行一个密码 密码长度不超过10； 输出 ：如果这N个密码互不为其他密码的前缀，输出YES，否则输出NO 样例input32955495595540101123321 outputCase #1: YesCase #2: NoCase #3: No 题解典型的tire树板子题 把每个密码都存到tire树里，然后存的时候判断别的密码是否出现过和判断此密码是否是别的密码的前缀就可以了 代码如下#include#include using namespace std ;const int maxn=1e4+1;struct node{ int k; int next[10]; node() { for(int i=0;i&lt;10;i++) next[i]=-1; }};int cnt;node t[maxn*10];int _insert(string a){ int len=a.size(); int cur=0; for(int i=0;i&lt;len;i++) { if(i==len-1&amp;&amp;t[cur].next[a[i]-‘0’]!=-1) //判断他是否是别人的前缀 return 0; if(t[cur].next[a[i]-‘0’]==-1) { t[cur].next[a[i]-‘0’]=++cnt; } cur=t[cur].next[a[i]-‘0’]; if(t[cur].k==1) //判断是否别人是他的前缀 return 0; } t[cur].k=1; return 1;}int main(){ int t; cin&gt;&gt;t; int pan=1; while(t–) { int n; cin&gt;&gt;n; while(n–) { string a; cin&gt;&gt;a; if(pan==0) continue; pan=_insert(a); } if(pan==1) cout&lt;&lt;”Yes”&lt;&lt;endl; else cout&lt;&lt;”No”&lt;&lt;endl; } } 总结 ：一开始用的new 动态开辟内存写tire树 不知道为什么交了一发就RE了然后zbr说他都用cnt++写然后我花了五分钟改成cnt++写，AC了","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-11-27T14:22:47.073Z","updated":"2019-11-27T14:22:47.073Z","comments":true,"path":"2019/11/27/hello-world/","link":"","permalink":"http://yoursite.com/2019/11/27/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}